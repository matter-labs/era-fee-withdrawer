libos.entrypoint = "{{ entrypoint }}"

[loader]
argv = ["{{ entrypoint }}"]
entrypoint = "file:{{ gramine.libos }}"
# set a log level for gramine
log_level = "{{ log_level }}"

[loader.env]
LD_LIBRARY_PATH = "/lib"
SSL_CERT_FILE = "/etc/ssl/certs/ca-bundle.crt"
UV_USE_IO_URING = "0"
MISC_FEE_ACCOUNT_PRIVATE_KEY.passthrough = true
OPERATOR_ADDRESS.passthrough = true
WITHDRAWAL_FINALIZER_ETH_ADDRESS.passthrough = true
MISC_RESERVE_FEE_ACCUMULATOR_ADDRESS.passthrough = true
L1_RPC_ADDRESS.passthrough = true
ZKSYNC_WEB3_API_URL.passthrough = true
MISC_MAX_LIQUIDATION_FEE_PERCENT.passthrough = true
LOWER_BOUND_OPERATOR_THRESHOLD.passthrough = true
UPPER_BOUND_OPERATOR_THRESHOLD.passthrough = true
LOWER_BOUND_WITHDRAWER_THRESHOLD.passthrough = true
UPPER_BOUND_WITHDRAWER_THRESHOLD.passthrough = true
LOWER_BOUND_PAYMASTER_THRESHOLD.passthrough = true
UPPER_BOUND_PAYMASTER_THRESHOLD.passthrough = true
# optional env
WATCHDOG_ADDRESS.passthrough = true
LOWER_BOUND_WATCHDOG_THRESHOLD.passthrough = true
UPPER_BOUND_WATCHDOG_THRESHOLD.passthrough = true
L1_ETH_TRANSFER_THRESHOLD.passthrough = true
L2_ETH_TRANSFER_THRESHOLD.passthrough = true
CONTRACTS_L2_TESTNET_PAYMASTER_ADDR.passthrough = true

[fs]
root.uri = "file:/"
start_dir = "/app"
mounts = [
  { type = "tmpfs", path = "/var/tmp" },
  { type = "tmpfs", path = "/tmp" },
  { type = "tmpfs", path = "/app/.dcap-qcnl" },
  { type = "tmpfs", path = "/app/.az-dcap-client" },
]

[sgx]
debug = false
edmm_enable = false
enclave_size = "8G"
max_threads = 64
remote_attestation = "dcap"

trusted_files = [
  "file:/app/",
  "file:/bin/",
  "file:/etc/gai.conf",
  "file:/etc/ssl/certs/ca-bundle.crt",
  "file:/lib/",
  "file:/nix/",
  "file:{{ gramine.libos }}",
  "file:{{ gramine.runtimedir() }}/",
]

[sys]
stack.size = "1M"
enable_extra_runtime_domain_names_conf = true
enable_sigterm_injection = true
